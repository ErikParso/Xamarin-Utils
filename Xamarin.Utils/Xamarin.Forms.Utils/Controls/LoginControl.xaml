<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:login="clr-namespace:Microsoft.WindowsAzure.MobileServices;assembly=Microsoft.Azure.Mobile.Client"
             xmlns:converters="clr-namespace:Xamarin.Forms.Utils.Converters"
             xmlns:controls="clr-namespace:Xamarin.Forms.Utils.Controls"
             x:Class="Xamarin.Forms.Utils.Controls.LoginControl"
             x:Name="this">

    <ContentView.Resources>
        <Color x:Key="FacebookColor">#4267B2</Color>
        <Color x:Key="FacebookTextColor">#FFFFFF</Color>
        <Color x:Key="GoogleColor">#FFFFFF</Color>
        <Color x:Key="GoogleTextColor">#757575</Color>
        <Color x:Key="ContinueColor">#F25400</Color>
        <Color x:Key="ContinueTextColor">#FFFFFF</Color>
        <Color x:Key="ErrorColor">#E2574C</Color>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </ContentView.Resources>

    <ContentView.Content>

        <Grid WidthRequest="300">
            <StackLayout IsVisible="{Binding WorkInProgress, Converter={StaticResource InverseBooleanConverter}}">
                <controls:LineSplitter Text="Login"/>
                <Button Image="xamarin_utils_facebook_white.png"
                        Text="Continue with Facebook"
                        HeightRequest="36" CornerRadius="5" Padding="5"
                        TextColor="{StaticResource FacebookTextColor}"
                        BackgroundColor="{StaticResource FacebookColor}"
                        Command="{Binding LoginCommand}"
                        CommandParameter="{x:Static login:MobileServiceAuthenticationProvider.Facebook}"/>
                <Button Image="xamarin_utils_google_white.png"
                        Text="Sign in with Google"
                        HeightRequest="36" CornerRadius="5" Padding="5"
                        TextColor="{StaticResource GoogleTextColor}"
                        BackgroundColor="{StaticResource GoogleColor}"
                        Command="{Binding LoginCommand}"
                        CommandParameter="{x:Static login:MobileServiceAuthenticationProvider.Google}"/>
                <controls:LineSplitter Text="or"/>

                <controls:ValidationEntry HeightRequest="36" ValidatableString="{Binding Email}"
                                          Placeholder="Email" DisplayErrors="ShowError"/>
                <controls:ValidationEntry HeightRequest="36" ValidatableString="{Binding Password}"
                                          Placeholder="Password" IsPassword="True" DisplayErrors="ShowError"/>
                <controls:ValidationEntry HeightRequest="36" ValidatableString="{Binding ConfirmPassword}" Placeholder="Confirm password"
                                          IsPassword="True" DisplayErrors="ShowError"
                                          IsVisible="{Binding IsRegistration}"/>
                <Label x:Name="validationLabel" TextColor="{StaticResource ErrorColor}" FontSize="Small" VerticalOptions="End" HorizontalOptions="Center" IsVisible="False"/>
                <Button Text="Continue"
                        IsVisible="{Binding IsRegistration, Converter={StaticResource InverseBooleanConverter}}"
                        HeightRequest="36" CornerRadius="5" Padding="5"
                        TextColor="{StaticResource ContinueTextColor}"
                        BackgroundColor="{StaticResource ContinueColor}"
                        Command="{Binding LoginCustomCommand}"/>
                <Button Text="Register"
                        IsVisible="{Binding IsRegistration}"
                        HeightRequest="36" CornerRadius="5" Padding="5"
                        TextColor="{StaticResource ContinueTextColor}"
                        BackgroundColor="{StaticResource ContinueColor}"
                        Command="{Binding RegisterCommand}"/>

                <Label Text="Create a new account" TextDecorations="Underline" HorizontalOptions="End" FontSize="Small"
                       IsVisible="{Binding IsRegistration, Converter={StaticResource InverseBooleanConverter}}">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="CreateNewAccountClick"/>
                    </Label.GestureRecognizers>
                </Label>
                <Label Text="Use an existing account" TextDecorations="Underline" HorizontalOptions="End" FontSize="Small"
                       IsVisible="{Binding IsRegistration}">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="UseExistingAccountClick"/>
                    </Label.GestureRecognizers>
                </Label>
                <StackLayout VerticalOptions="End" IsVisible="{Binding Source={x:Reference this}, Path=Test}">
                    <controls:LineSplitter Text="Test active"/>
                    <Button Text="Authorized request" Clicked="TestRequestClick"/>
                    <Button Text="Verify email" Clicked="TestVerify"/>
                    <Button Text="Restore user" Clicked ="TestAuthenticateUser"/>
                    <Button Text="Logout" Clicked="TestLogoutUser"/>
                    <Button Text="Current user" Clicked="TestGetCurrentUserInfo"/>
                    <Label x:Name="TestResult" FontSize="Micro" Text="Try authorized request. If unauthorized, authenticate user. This loads user from secure store, tries to refresh token and authenticates him on server. If unsuccessfull, login with provider or custom accout. Execute Verify to send verification email for registered custom account."/>
                </StackLayout>

            </StackLayout>
            <ActivityIndicator IsRunning="True" IsVisible="{Binding WorkInProgress}"/>
        </Grid>

    </ContentView.Content>
</ContentView>